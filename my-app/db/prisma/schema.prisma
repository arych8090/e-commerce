
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  userid String @unique
  username String
  email  String @unique
  phoneno String @unique
  provider String
  interection usertypeinterection[]
  orders orders[]
}

model usertypeinterection{
  id Int @id @default(autoincrement())
  type String
  count Int @default(0)
  userid Int
  user User @relation(fields: [userid] , references: [id])
  subtype usersubtypeinterections[]

  @@unique([type , userid])
}

model usersubtypeinterections{
  id Int @id @default(autoincrement())
  subtypes String
  count Int @default(0)
  usertypeid Int
  usertypeinterections usertypeinterection @relation(fields: [usertypeid] ,  references: [id])

  @@unique([subtypes , usertypeid])
}

model product {
  id Int @id @default(autoincrement())
  productid String @unique
  productname String
  productType String
  productSubtype String[]
  price Int 
  imageurl String
  aboutProject String
  stockleft Int
  discount Int
  rating Int
  createdAt DateTime
  updatedAt DateTime
  likes Int
  productinterections Int
  provider Int
}

model typeinterections {
  id Int @id @default(autoincrement())
  type String @unique
  count Int @default(0)
  subtypes subtypes[]
}

model subtypes{
  id Int @id @default(autoincrement())
  subtype String 
  count Int @default(0)
  typeid Int
  type typeinterections @relation(fields: [typeid] , references: [id])

  @@unique([subtype , typeid ])
}

model orders {
  id Int @id @default(autoincrement())
  orderid Int 
  orderuser Int
  user User @relation(fields: [orderuser] , references: [id])
  products String[] 

  @@unique([orderid , orderuser])
}